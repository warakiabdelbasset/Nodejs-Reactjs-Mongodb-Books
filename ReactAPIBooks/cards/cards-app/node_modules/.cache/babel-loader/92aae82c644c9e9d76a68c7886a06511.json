{"ast":null,"code":"/* eslint-disable */\nvar mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n\nfunction stackBlurImage(img, canvas, radius, w, h) {\n  var nw = img.naturalWidth;\n  var nh = img.naturalHeight;\n  canvas.style.width = w + \"px\";\n  canvas.style.height = h + \"px\";\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext(\"2d\");\n  context.clearRect(0, 0, w, h);\n  var ratio = 1;\n\n  if (nw / w > nh / h) {\n    ratio = nh / h;\n  } else {\n    ratio = nw / w;\n  }\n\n  var drawW = nw / ratio;\n  var drawH = nh / ratio;\n\n  try {\n    context.drawImage(img, Math.floor((drawW - w) / -2), Math.floor((drawH - h) / -2), Math.ceil(drawW), Math.ceil(drawH));\n  } catch (e) {\n    console.error('There was a problem drawing the image. ' + e);\n  }\n\n  if (isNaN(radius) || radius < 1) return;\n  stackBlurCanvasRGB(canvas, 0, 0, w, h, radius);\n}\n\nfunction stackBlurCanvasRGB(canvas, top_x, top_y, width, height, radius) {\n  if (isNaN(radius) || radius < 1) return;\n  radius |= 0;\n  var context = canvas.getContext(\"2d\");\n  var imageData;\n\n  try {\n    imageData = context.getImageData(top_x, top_y, width, height);\n  } catch (e) {\n    throw new Error(\"unable to access image data: \" + e);\n  }\n\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, r_out_sum, g_out_sum, b_out_sum, r_in_sum, g_in_sum, b_in_sum, pr, pg, pb, rbs;\n  var div = radius + radius + 1;\n  var w4 = width << 2;\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i == radiusPlus1) var stackEnd = stack;\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mul_sum = mul_table[radius];\n  var shg_sum = shg_table[radius];\n\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = r_sum = g_sum = b_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi] = r_sum * mul_sum >> shg_sum;\n      pixels[yi + 1] = g_sum * mul_sum >> shg_sum;\n      pixels[yi + 2] = b_sum * mul_sum >> shg_sum;\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = r_in_sum = g_sum = b_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = r_sum * mul_sum >> shg_sum;\n      pixels[p + 1] = g_sum * mul_sum >> shg_sum;\n      pixels[p + 2] = b_sum * mul_sum >> shg_sum;\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n\nfunction BlurStack() {\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n}\n\nmodule.exports = stackBlurImage;","map":{"version":3,"sources":["C:/Users/abdel/OneDrive/Desktop/MyProjects/Booksproject/ReactAPIBooks/cards/cards-app/node_modules/react-blur/lib/StackBlur.js"],"names":["mul_table","shg_table","stackBlurImage","img","canvas","radius","w","h","nw","naturalWidth","nh","naturalHeight","style","width","height","context","getContext","clearRect","ratio","drawW","drawH","drawImage","Math","floor","ceil","e","console","error","isNaN","stackBlurCanvasRGB","top_x","top_y","imageData","getImageData","Error","pixels","data","x","y","i","p","yp","yi","yw","r_sum","g_sum","b_sum","r_out_sum","g_out_sum","b_out_sum","r_in_sum","g_in_sum","b_in_sum","pr","pg","pb","rbs","div","w4","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","stackEnd","stackIn","stackOut","mul_sum","shg_sum","r","g","b","putImageData","a","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nvar mul_table = [\n    512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512,\n    454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512,\n    482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456,\n    437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512,\n    497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328,\n    320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456,\n    446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335,\n    329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512,\n    505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405,\n    399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328,\n    324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271,\n    268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456,\n    451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388,\n    385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335,\n    332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292,\n    289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259\n];\n\nvar shg_table = [\n    9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\n    17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n    19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24\n];\n\nfunction stackBlurImage(img, canvas, radius, w, h) {\n    var nw = img.naturalWidth;\n    var nh = img.naturalHeight;\n\n    canvas.style.width = w + \"px\";\n    canvas.style.height = h + \"px\";\n    canvas.width = w;\n    canvas.height = h;\n\n    var context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, w, h);\n\n    var ratio = 1;\n    if (nw / w > nh / h) {\n        ratio = nh / h;\n    } else {\n        ratio = nw / w;\n    }\n\n    var drawW = nw / ratio;\n    var drawH = nh / ratio;\n\n    try {\n      context.drawImage(img, Math.floor((drawW - w) / -2), Math.floor((drawH - h) / -2), Math.ceil(drawW), Math.ceil(drawH));\n    } catch (e) {\n      console.error('There was a problem drawing the image. ' + e);\n    }\n\n    if (isNaN(radius) || radius < 1) return;\n    stackBlurCanvasRGB(canvas, 0, 0, w, h, radius);\n}\n\nfunction stackBlurCanvasRGB(canvas, top_x, top_y, width, height, radius) {\n    if (isNaN(radius) || radius < 1) return;\n    radius |= 0;\n\n    var context = canvas.getContext(\"2d\");\n    var imageData;\n\n    try {\n        imageData = context.getImageData(top_x, top_y, width, height);\n    } catch (e) {\n        throw new Error(\"unable to access image data: \" + e);\n    }\n\n    var pixels = imageData.data;\n\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum,\n        r_out_sum, g_out_sum, b_out_sum,\n        r_in_sum, g_in_sum, b_in_sum,\n        pr, pg, pb, rbs;\n\n    var div = radius + radius + 1;\n    var w4 = width << 2;\n    var widthMinus1 = width - 1;\n    var heightMinus1 = height - 1;\n    var radiusPlus1 = radius + 1;\n    var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n    var stackStart = new BlurStack();\n    var stack = stackStart;\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i == radiusPlus1) var stackEnd = stack;\n    }\n    stack.next = stackStart;\n    var stackIn = null;\n    var stackOut = null;\n\n    yw = yi = 0;\n\n    var mul_sum = mul_table[radius];\n    var shg_sum = shg_table[radius];\n\n    for (y = 0; y < height; y++) {\n        r_in_sum = g_in_sum = b_in_sum = r_sum = g_sum = b_sum = 0;\n\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n\n        stack = stackStart;\n\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack = stack.next;\n        }\n\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = (pg = pixels[p + 1])) * rbs;\n            b_sum += (stack.b = (pb = pixels[p + 2])) * rbs;\n\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n\n            stack = stack.next;\n        }\n\n\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi] = (r_sum * mul_sum) >> shg_sum;\n            pixels[yi + 1] = (g_sum * mul_sum) >> shg_sum;\n            pixels[yi + 2] = (b_sum * mul_sum) >> shg_sum;\n\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n            r_in_sum += (stackIn.r = pixels[p]);\n            g_in_sum += (stackIn.g = pixels[p + 1]);\n            b_in_sum += (stackIn.b = pixels[p + 2]);\n\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n\n            stackIn = stackIn.next;\n\n            r_out_sum += (pr = stackOut.r);\n            g_out_sum += (pg = stackOut.g);\n            b_out_sum += (pb = stackOut.b);\n\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n\n            stackOut = stackOut.next;\n\n            yi += 4;\n        }\n        yw += width;\n    }\n\n\n    for (x = 0; x < width; x++) {\n        g_in_sum = b_in_sum = r_in_sum = g_sum = b_sum = r_sum = 0;\n\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n\n        stack = stackStart;\n\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack = stack.next;\n        }\n\n        yp = width;\n\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n\n            r_sum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = (pg = pixels[yi + 1])) * rbs;\n            b_sum += (stack.b = (pb = pixels[yi + 2])) * rbs;\n\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n\n            stack = stack.next;\n\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p] = (r_sum * mul_sum) >> shg_sum;\n            pixels[p + 1] = (g_sum * mul_sum) >> shg_sum;\n            pixels[p + 2] = (b_sum * mul_sum) >> shg_sum;\n\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n\n            p = (x + (((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width)) << 2;\n\n            r_sum += (r_in_sum += (stackIn.r = pixels[p]));\n            g_sum += (g_in_sum += (stackIn.g = pixels[p + 1]));\n            b_sum += (b_in_sum += (stackIn.b = pixels[p + 2]));\n\n            stackIn = stackIn.next;\n\n            r_out_sum += (pr = stackOut.r);\n            g_out_sum += (pg = stackOut.g);\n            b_out_sum += (pb = stackOut.b);\n\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n\n            stackOut = stackOut.next;\n\n            yi += width;\n        }\n    }\n    context.putImageData(imageData, top_x, top_y);\n}\n\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\n\nmodule.exports = stackBlurImage;\n"]},"metadata":{},"sourceType":"script"}