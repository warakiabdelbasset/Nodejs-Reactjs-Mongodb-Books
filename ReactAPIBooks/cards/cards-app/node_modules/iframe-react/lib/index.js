'use strict';

exports.__esModule = true;
exports.default = undefined;

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Frame = (_temp2 = _class = function (_Component) {
  _inherits(Frame, _Component);

  function Frame() {
    var _temp, _this, _ret;

    _classCallCheck(this, Frame);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.renderContent = function () {
      var doc = _this.frame.contentDocument;
      var head = _this.props.head;
      if (head != null) {
        (0, _reactDom.render)(head, doc.head);
      }
      (0, _reactDom.render)(_react2.default.createElement(
        _react.Fragment,
        null,
        _this.props.children
      ), _this.frameRoot);
    }, _this.frameRef = function (f) {
      if (f != null) {
        _this.frame = f;
      }
      if (typeof _this.props.frameRef === 'function') {
        _this.props.frameRef(_this.frameRoot);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Frame.prototype.componentDidMount = function componentDidMount() {
    var doc = this.frame.contentDocument;
    this.frameRoot = doc.createElement('div');
    doc.body.appendChild(this.frameRoot);

    this.renderContent();

    if (typeof this.props.documentRef === 'function') {
      this.props.documentRef(doc);
    }
  };

  Frame.prototype.componentDidUpdate = function componentDidUpdate() {
    this.renderContent();
  };

  Frame.prototype.componentWillUnmount = function componentWillUnmount() {
    var doc = this.frame.contentDocument;

    (0, _reactDom.unmountComponentAtNode)(doc.head);
    (0, _reactDom.unmountComponentAtNode)(this.frame);
  };

  Frame.prototype.render = function render() {
    var _props = this.props,
        title = _props.title,
        style = _props.style;

    return _react2.default.createElement('iframe', { ref: this.frameRef, title: title, style: style });
  };

  return Frame;
}(_react.Component), _class.defaultProps = {
  title: undefined,
  head: undefined,
  frameRef: undefined,
  documentRef: undefined
}, _temp2);
exports.default = Frame;
Frame.propTypes = process.env.NODE_ENV !== "production" ? {
  title: _propTypes2.default.string,
  head: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.arrayOf(_propTypes2.default.element)]),
  frameRef: _propTypes2.default.func,
  documentRef: _propTypes2.default.func
} : {};
module.exports = exports['default'];